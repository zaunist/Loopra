name: Release Build

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Android APK
            os: ubuntu-latest
            build_cmd: flutter build apk --release
            artifact_name: android-apk
            package_file: android-app.apk
            package_script_bash: |
              set -euo pipefail
              mkdir -p dist
              cp build/app/outputs/flutter-apk/app-release.apk "dist/${PACKAGE_FILE}"
            package_script_pwsh: ""
          - name: Android App Bundle
            os: ubuntu-latest
            build_cmd: flutter build appbundle --release
            artifact_name: android-appbundle
            package_file: android-appbundle.aab
            package_script_bash: |
              set -euo pipefail
              mkdir -p dist
              cp build/app/outputs/bundle/release/app-release.aab "dist/${PACKAGE_FILE}"
            package_script_pwsh: ""
          - name: Web
            os: ubuntu-latest
            build_cmd: flutter build web --release
            artifact_name: web
            package_file: web-build.zip
            package_script_bash: |
              set -euo pipefail
              mkdir -p dist
              cd build/web
              zip -r "../../dist/${PACKAGE_FILE}" .
            package_script_pwsh: ""
          - name: Linux Desktop
            os: ubuntu-latest
            build_cmd: flutter build linux --release
            artifact_name: linux-desktop
            package_file: linux-bundle.tar.gz
            package_script_bash: |
              set -euo pipefail
              mkdir -p dist
              tar -C build/linux/x64/release -czf "dist/${PACKAGE_FILE}" bundle
            package_script_pwsh: ""
            linux_deps: true
            enable_desktop: flutter config --enable-linux-desktop
          - name: Windows Desktop
            os: windows-latest
            build_cmd: flutter build windows --release
            artifact_name: windows-desktop
            package_file: windows-bundle.zip
            package_script_bash: ""
            package_script_pwsh: |
              $dist = Join-Path (Get-Location) 'dist'
              New-Item -ItemType Directory -Path $dist -Force | Out-Null
              Compress-Archive -Path "build/windows/x64/runner/Release/*" -DestinationPath (Join-Path $dist $env:PACKAGE_FILE) -Force
            enable_desktop: flutter config --enable-windows-desktop
          - name: macOS Desktop
            os: macos-latest
            build_cmd: flutter build macos --release
            artifact_name: macos-desktop
            package_file: macos-app.zip
            package_script_bash: |
              set -euo pipefail
              mkdir -p dist
              APP_PATH=$(find build/macos/Build/Products/Release -type d -name "*.app" -print | head -n 1)
              if [ -z "${APP_PATH}" ]; then
                echo "macOS app bundle not found" >&2
                exit 1
              fi
              ditto -c -k --keepParent "${APP_PATH}" "dist/${PACKAGE_FILE}"
            package_script_pwsh: ""
            enable_desktop: flutter config --enable-macos-desktop
          - name: iOS
            os: macos-latest
            build_cmd: flutter build ios --release --no-codesign
            artifact_name: ios
            package_file: ios-app.zip
            package_script_bash: |
              set -euo pipefail
              mkdir -p dist
              APP_PATH=$(find build/ios/iphoneos -type d -name "*.app" -print | head -n 1)
              if [ -z "${APP_PATH}" ]; then
                echo "iOS app bundle not found" >&2
                exit 1
              fi
              ditto -c -k --keepParent "${APP_PATH}" "dist/${PACKAGE_FILE}"
            package_script_pwsh: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Show Flutter version
        run: flutter --version

      - name: Enable desktop target
        if: ${{ matrix.enable_desktop }}
        run: ${{ matrix.enable_desktop }}

      - name: Install Linux desktop dependencies
        if: ${{ matrix.linux_deps }}
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Fetch packages
        run: flutter pub get

      - name: Build ${{ matrix.name }}
        run: ${{ matrix.build_cmd }}

      - name: Package ${{ matrix.name }} (Unix)
        if: runner.os != 'Windows'
        run: ${{ matrix.package_script_bash }}
        shell: bash
        env:
          PACKAGE_FILE: ${{ matrix.package_file }}
          TAG_NAME: ${{ github.ref_name }}

      - name: Package ${{ matrix.name }} (Windows)
        if: runner.os == 'Windows'
        run: ${{ matrix.package_script_pwsh }}
        shell: pwsh
        env:
          PACKAGE_FILE: ${{ matrix.package_file }}
          TAG_NAME: ${{ github.ref_name }}

      - name: Upload ${{ matrix.name }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.package_file }}

  publish:
    name: Publish Release Assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -R dist

      - name: Generate changelog
        run: |
          set -euo pipefail
          TAG_NAME="${GITHUB_REF_NAME}"
          git fetch --tags --force
          if git rev-parse "${TAG_NAME}^" >/dev/null 2>&1; then
            PREVIOUS_TAG=$(git describe --tags --abbrev=0 "${TAG_NAME}^" 2>/dev/null || true)
          else
            PREVIOUS_TAG=""
          fi

          {
            echo "# ${TAG_NAME}"
            echo
            if [ -n "${PREVIOUS_TAG}" ]; then
              echo "Changes since ${PREVIOUS_TAG}:"
            else
              echo "Changes:"
            fi
            echo
          } > changelog.md

          COMMITS_FILE=$(mktemp)
          if [ -n "${PREVIOUS_TAG}" ]; then
            git log "${PREVIOUS_TAG}..${TAG_NAME}" --pretty=format:'%H%x09%an%x09%s' --no-merges > "${COMMITS_FILE}"
          else
            git log "${TAG_NAME}" --pretty=format:'%H%x09%an%x09%s' --no-merges > "${COMMITS_FILE}"
          fi

          TOKEN="${GH_TOKEN:-${GITHUB_TOKEN:-}}"
          declare -a API_HEADERS
          API_HEADERS=(-H "Accept: application/vnd.github+json")
          if [ -n "${TOKEN}" ]; then
            API_HEADERS+=(-H "Authorization: Bearer ${TOKEN}")
          fi
          HAS_JQ=0
          if command -v jq >/dev/null 2>&1; then
            HAS_JQ=1
          fi

          if [ ! -s "${COMMITS_FILE}" ]; then
            echo "- No commits found." >> changelog.md
          else
            while IFS=$'\t' read -r COMMIT_SHA AUTHOR_NAME COMMIT_SUBJECT; do
              AUTHOR_HANDLE="${AUTHOR_NAME}"
              if [ -n "${COMMIT_SHA}" ] && [ "${HAS_JQ}" -eq 1 ]; then
                API_RESPONSE=$(curl -sS "${API_HEADERS[@]}" "https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${COMMIT_SHA}" || true)
                if [ -n "${API_RESPONSE}" ]; then
                  AUTHOR_LOGIN=$(printf '%s' "${API_RESPONSE}" | jq -r '.author.login // empty' 2>/dev/null || true)
                  if [ -n "${AUTHOR_LOGIN}" ]; then
                    AUTHOR_HANDLE="@${AUTHOR_LOGIN}"
                  fi
                fi
              fi

              printf -- "- %s: %s\n" "${AUTHOR_HANDLE}" "${COMMIT_SUBJECT}" >> changelog.md
            done < "${COMMITS_FILE}"
          fi

          rm "${COMMITS_FILE}"
          echo >> changelog.md

      - name: Publish GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          ASSETS=(dist/*)
          if [ ${#ASSETS[@]} -eq 0 ]; then
            echo "No build artifacts found in dist" >&2
            exit 1
          fi

          mapfile -t QUOTES <<'EOF'
          Stay hungry, stay foolish.
          行百里者半九十。Keep going.
          希望の光は諦める心に宿らない。
          Adelante, que lo mejor está por venir.
          只要路是对的，就不怕路远。
          Great things are done by a series of small things brought together.
          心臓を捧げよ！
          自由はこの壁の向こうにある。
          人は戦うことをやめたとき初めて敗北する。
          その日人類は思い出した、巨人に支配されていた恐怖を。
          進め！進め！進め！
          お前は自由だ。
          To strive, to seek, to find, and not to yield.
          The only limit to our realization of tomorrow is our doubts of today.
          天行健，君子以自强不息。
          地势坤，君子以厚德载物。
          千里之行，始于足下。
          不积跬步，无以至千里。
          路漫漫其修远兮，吾将上下而求索。
          长风破浪会有时，直挂云帆济沧海。
          海内存知己，天涯若比邻。
          有志者事竟成。
          苟日新，日日新，又日新。
          青，取之于蓝而青于蓝。
          业精于勤，荒于嬉。
          读万卷书，行万里路。
          山重水复疑无路，柳暗花明又一村。
          会当凌绝顶，一览众山小。
          If I cannot do great things, I can do small things in a great way.
          Success is the sum of small efforts repeated day in and day out.
          It always seems impossible until it is done.
          The future belongs to those who believe in the beauty of their dreams.
          Courage is grace under pressure.
          All we have to decide is what to do with the time that is given us.
          We are all in the gutter, but some of us are looking at the stars.
          It is not in the stars to hold our destiny but in ourselves.
          Not all those who wander are lost.
          Il faut imaginer Sisyphe heureux.
          L'espoir n'est pas un rêve mais une manière de traduire les rêves en réalité.
          La vita è bella, non smettere mai di sognare.
          Las estrellas están ahí para recordarnos que siempre hay algo más grande.
          Freiheit beginnt im Herzen.
          Der Weg entsteht, indem du ihn gehst.
          Свобода стоит каждого шага.
          Надежда умирает последней.
          Per aspera ad astra.
          Audentes fortuna iuvat.
          Non desistas, non exieris.
          星は自分の道を迷わない。
          自分の足で立て、それが自由への第一歩だ。
          EOF

          SEED="${TAG_NAME}${GITHUB_SHA:-}${#ASSETS[@]}"
          HASH=$(printf '%s' "${SEED}" | cksum | cut -d' ' -f1)
          INDEX=$((HASH % ${#QUOTES[@]}))
          INSPIRATION=${QUOTES[$INDEX]}
          RELEASE_TITLE="Release ${TAG_NAME} — ${INSPIRATION}"

          if gh release view "${TAG_NAME}" >/dev/null 2>&1; then
            gh release edit "${TAG_NAME}" --title "${RELEASE_TITLE}" --notes-file changelog.md
            gh release upload "${TAG_NAME}" "${ASSETS[@]}" --clobber
          else
            gh release create "${TAG_NAME}" "${ASSETS[@]}" --title "${RELEASE_TITLE}" --notes-file changelog.md --latest
          fi
